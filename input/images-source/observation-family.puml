@startuml
' Road Safety IG — Observation Profiles Family
skinparam shadowing false
' skinparam classAttributeIconSize 0
skinparam dpi 600
skinparam wrapWidth 200
skinparam nodesep 15
skinparam ranksep 75
skinparam linetype ortho


title Observation Profiles Family

class "PHCoreObservation" as PHCoreObs {

}

' Base profile (no assumption on value[x])
class "RS-Obs-Base" as ObsBase {
  Base profile (no assumption on value[x])
  --
  + status : code [1..1] MS
  + code : CodeableConcept [1..1] MS
  + effectiveDateTime : dateTime [1..1] MS
  ==
  ..No assumption on value[x]..
}

' Quantitative scalar measures
class "RS-Obs-Quantitative" as ObsQuantitative {
  Quantitative scalar measures
  --
  + valueQuantity : Quantity [1..1] MS
  + unit : define expected unit when available (preferred)
  ==
  Examples: Temperature, Pulse, Respiratory Rate
}

' Boolean flags (presence/yes-no)
class "RS-Obs-BooleanFlag" as ObsBoolean {
  Boolean flags (presence/yes-no)
  --
  + valueBoolean : boolean [1..1] MS
  ==
  Examples: Transport/Vehicular flag, Bites/Stings, ..., Others
}

class "RS-Obs-Codeable" as ObsCodeable {
  Coded selections and "Specify ..." items
  --
  + valueCodeableConcept : CodeableConcept [1..1] MS
  + binding : ValueSet (preferred/example)
  ==
  Examples: Mode of Transport, Specify animal/insect, ..., Others – specify
}

' Timestamp-only milestones
class "RS-Obs-Timestamp" as ObsTimestamp {
  Timestamp-only milestones
  --
  + valueDateTime : dateTime [1..1] MS
  ==
  Examples: DateReceived, TimeOnScene, Departed, ArrivedHospital, ArrivedStation
}

' Component-based measure: Blood Pressure
class "RS-Obs-BloodPressure" as ObsBP {
  Component-based measure
  --
  + component[Systolic].code = LOINC 8480-6
  + component[Systolic].valueQuantity : Quantity (mm[Hg])
  + component[Diastolic].code = LOINC 8462-4
  + component[Diastolic].valueQuantity : Quantity (mm[Hg])
  ==
  Use BP-specific profile directly instead of a generic "component measure" base.
}

' Component-based measure: GCS
class "RS-Obs-GCS" as ObsGCS {
  Component-based measure
  --
  + component[Eyes] : CodeableConcept
  + compontent[Eyes].valueInteger : integer (total) [0..1]
  + component[Verbal] : CodeableConcept
  + compontent[Verbal].valueInteger : integer (total) [0..1]
  + component[Motor] : CodeableConcept
  + compontent[Motor].valueInteger : integer (total) [0..1]
}

' Inheritance
PHCoreObs --> ObsBase
ObsBase --> ObsQuantitative
ObsBase --> ObsBoolean
ObsBase --> ObsCodeable
ObsBase --> ObsTimestamp
ObsBase --> ObsBP
ObsBase --> ObsGCS

@enduml
